<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.thirdproject.dao.PositionDao">
  <resultMap id="BaseResultMap" type="com.trkj.thirdproject.entity.Position">
    <id column="Position_Id" jdbcType="INTEGER" property="positionId" />
    <result column="Position_Name" jdbcType="VARCHAR" property="positionName" />
    <result column="JobDescription" jdbcType="VARCHAR" property="jobdescription" />
    <result column="AddName" jdbcType="VARCHAR" property="addname" />
    <result column="AddTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="UpdateName" jdbcType="VARCHAR" property="updatename" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="DeleteName" jdbcType="VARCHAR" property="deletename" />
    <result column="DeleteTime" jdbcType="TIMESTAMP" property="deletetime" />
    <result column="TimeLiness" jdbcType="INTEGER" property="timeliness" />
  </resultMap>
  <sql id="Base_Column_List">
    Position_Id, Position_Name, JobDescription, AddName, AddTime, UpdateName, UpdateTime, 
    DeleteName, DeleteTime, TimeLiness
  </sql>
  <select id="findPositionByEmpName" resultType="java.lang.String" parameterType="string">
    select p.Position_Name from Position p left join Emp_Position ep
on p.Position_Id=ep.Position_Id left join Emp e
on ep.Emp_Id=e.Emp_Id
 where e.Emp_Name=#{EmpName};
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `Position`
    where Position_Id = #{positionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `Position`
    where Position_Id = #{positionId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" keyColumn="Position_Id" keyProperty="positionId" parameterType="com.trkj.thirdproject.entity.Position" useGeneratedKeys="true">
    insert into `Position`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="positionName != null">
        Position_Name,
      </if>
      <if test="jobdescription != null">
        JobDescription,
      </if>
      <if test="addname != null">
        AddName,
      </if>
      <if test="addtime != null">
        AddTime,
      </if>
      <if test="updatename != null">
        UpdateName,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
      <if test="deletename != null">
        DeleteName,
      </if>
      <if test="deletetime != null">
        DeleteTime,
      </if>
      <if test="timeliness != null">
        TimeLiness,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="positionName != null">
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="jobdescription != null">
        #{jobdescription,jdbcType=VARCHAR},
      </if>
      <if test="addname != null">
        #{addname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletename != null">
        #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        #{timeliness,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.thirdproject.entity.Position">
    update `Position`
    <set>
      <if test="positionName != null">
        Position_Name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="jobdescription != null">
        JobDescription = #{jobdescription,jdbcType=VARCHAR},
      </if>
      <if test="addname != null">
        AddName = #{addname,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        UpdateName = #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletename != null">
        DeleteName = #{deletename,jdbcType=VARCHAR},
      </if>
      <if test="deletetime != null">
        DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeliness != null">
        TimeLiness = #{timeliness,jdbcType=INTEGER},
      </if>
    </set>
    where Position_Id = #{positionId,jdbcType=INTEGER}
  </update>
  <insert id="insert" keyColumn="Position_Id" keyProperty="positionId" parameterType="com.trkj.thirdproject.entity.Position" useGeneratedKeys="true">
    insert into `Position` (Position_Name, AddName, AddTime,
      UpdateName, UpdateTime, DeleteName,
      DeleteTime, TimeLiness)
    values (#{positionName,jdbcType=VARCHAR}, #{addname,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP},
      #{updatename,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{deletename,jdbcType=VARCHAR},
      #{deletetime,jdbcType=TIMESTAMP}, #{timeliness,jdbcType=INTEGER})
  </insert>
  <!--删除后时效性为已过期1-->
  <update id="delTimeLiness"  parameterType="com.trkj.thirdproject.entity.Dept" >
     update `Position`
    set TimeLiness =1
          where Position_Id = #{positionId,jdbcType=INTEGER}
  </update>
  <!--  删除之后显示未过期的职位-->
  <select id="selectTimeLiness" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `Position`
    where TimeLiness = 0
  </select>
  <update id="updateByPrimaryKey" parameterType="com.trkj.thirdproject.entity.Position">
    update `Position`
    set Position_Name = #{positionName,jdbcType=VARCHAR},
      AddName = #{addname,jdbcType=VARCHAR},
      AddTime = #{addtime,jdbcType=TIMESTAMP},
      UpdateName = #{updatename,jdbcType=VARCHAR},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      DeleteName = #{deletename,jdbcType=VARCHAR},
      DeleteTime = #{deletetime,jdbcType=TIMESTAMP},
      TimeLiness = #{timeliness,jdbcType=INTEGER},
      JobDescription = #{jobdescription,jdbcType=VARCHAR}
    where Position_Id = #{positionId,jdbcType=INTEGER}
  </update>
  <select id="selectAllposition" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from `Position`
  </select>

  <!--  根据姓名模糊查询-->
  <select id="selectByname" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from `Position`
    <where>
      <if test="positionName != null">
        Position_Name like CONCAT(CONCAT('%',#{positionName,jdbcType=VARCHAR},'%'))
      </if>
and TimeLiness=0
    </where>

  </select>
</mapper>